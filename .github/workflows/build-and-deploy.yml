name: Build and Deploy

on:
  push:
    branches:
      - main   # Ou qualquer outra branch que você queira monitorar (ex: 'develop')

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Baixar o repositório
      - name: Check out the repository
        uses: actions/checkout@v2

      # Passo 2: Configurar o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # Ou qualquer versão do Node.js que você estiver usando

      # Passo 3: Instalar dependências
      - name: Install dependencies
        run: npm install  # Usando npm install para garantir que todas as dependências sejam instaladas

      # Passo 4: Rodar o build do projeto
      - name: Build project
        run: npm run build  # Esse comando precisa estar configurado no seu package.json

      # Passo 5: Verificar se o build foi gerado corretamente
      - name: List build directory
        run: ls -l ./build  # Verifique o conteúdo do diretório de build para garantir que os arquivos estão lá

      # Passo 6: Instalar WinSCP
      - name: Install WinSCP
        run: |
          sudo apt-get update
          sudo apt-get install -y winscp

      # Passo 7: Configuração de Deploy com WinSCP
      - name: Deploy to Windows server
        run: |
          winscp.com /command "open sftp://${{ secrets.WIN_SCP_USERNAME }}:${{ secrets.WIN_SCP_PASSWORD }}@legaldata.mtostes.com.br" "put ./build/* /C:/Node/" "exit"
        env:
          WIN_SCP_PASSWORD: ${{ secrets.WIN_SCP_PASSWORD }}  # Senha do servidor Windows armazenada no GitHub Secrets
          WIN_SCP_USERNAME: ${{ secrets.WIN_SCP_USERNAME }}  # Usuário do servidor Windows armazenado no GitHub Secrets
