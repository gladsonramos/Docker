name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Baixar o repositório
      - name: Check out the repository
        uses: actions/checkout@v2

      # Passo 2: Listar o conteúdo do repositório para verificar se o diretório Frontend existe
      - name: List repository contents
        run: |
          echo "Conteúdo do repositório:"
          ls -R  # Listando todos os arquivos e pastas do repositório

      # Passo 3: Configurar o Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # Passo 4: Instalar dependências no diretório Frontend
      - name: Install dependencies
        run: npm install --force
        working-directory: ./Frontend

      # Passo 5: Rodar o build do projeto no diretório Frontend
      - name: Build project
        run: npm run build
        working-directory: ./Frontend

      # Passo 6: Verificar se o diretório 'build' foi gerado
      - name: Verify build directory
        run: |
          echo "Conteúdo do diretório Frontend após o build:"
          ls ./Frontend  # Verificando o conteúdo da pasta Frontend
          echo "Tentando acessar ./Frontend/build"
          ls ./Frontend/build  # Tentando acessar o build
        working-directory: ./Frontend

      # Passo 7: Compactar o diretório build em um arquivo zip
      - name: Create build.zip
        run: |
          if [ -d "./Frontend/build" ]; then
            zip -r ./Frontend/build.zip ./Frontend/build
          else
            echo "Diretório 'build' não encontrado!"
            exit 1
          fi
        working-directory: ./Frontend

      # Passo 8: Criar uma nova release no GitHub
      - name: Create Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 'v1.0.0'
          release_name: 'Release v1.0.0'
          body: 'Descrição da Release'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      # Passo 9: Fazer o upload do build para a release criada
      - name: Upload Build to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 'v1.0.0'
          asset_path: './Frontend/build.zip'  # Caminho para o arquivo gerado
          asset_name: 'build.zip'
          asset_content_type: 'application/zip'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
