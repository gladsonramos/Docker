services:
  backend:
    build:
      context: ./Backend/
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: 172.17.0.1  # Nome exato do container PostgreSQL
      DB_PORT: 5433  # Deve ser a porta interna do PostgreSQL
      DB_USER: postgres
      DB_PASSWORD: gladson
      DB_NAME: postgres
    depends_on:
      my-postgres:
        condition: service_healthy  # Aguarda até que o PostgreSQL esteja pronto
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:80" # O React rodará na porta 3000, mas internamente o Nginx usa a porta 80
    depends_on:
      - backend    

  my-postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gladson
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"   
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend    

  rabbitmq:
    image: rabbitmq:management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # Porta do RabbitMQ
      - "15672:15672" # Porta da interface de gerenciamento
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  rabbitmq_data:
